package app

import (
	"net/http"
	"github.com/gorilla/mux"
	"github.com/ml444/gkit/transport/httpx"
	log "github.com/ml444/glog"
	"google.golang.org/grpc/xds"
	"{{ .ModulePrefix }}/{{ .PackageName }}Server/pkg/{{.PackageName}}"
)

{{$pn := .PackageName}}

func MakeHTTPHandler() http.Handler {
	router := mux.NewRouter()
{{ range $i, $svc := .ServiceList }}
	err := httpx.ParseService2HTTP(
        New{{SnakeToCamel $svc.ServiceName}}Service(), 
        router, 
        httpx.SetTimeoutMap(nil), 
    )
    if err != nil {
		log.Errorf("err: %v", err)
	}
{{end}}
	return router
}

func RegisterServerToGRPC(s *xds.GRPCServer) {
{{ range $i, $svc := .ServiceList }}
	{{$pn}}.Register{{SnakeToCamel $svc.ServiceName}}Server(s, New{{SnakeToCamel $svc.ServiceName}}Service())
{{end}}
}
